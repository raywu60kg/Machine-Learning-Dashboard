{"version":3,"sources":["logo.svg","serviceWorker.js","data/basic_information.js","data/hyper_parameters.js","data/model_structure.js","data/training_status.js","Visualizations/line_chart.js","Visualizations/confusion_matrix.js","handle_menu_status.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","RegistrationForm","getFieldDecorator","this","props","form","react_default","a","createElement","layout","style","padding","background","es_form","labelCol","xs","span","sm","wrapperCol","Item","label","rules","required","message","input","offset","es_button","type","htmlType","React","Component","WrappedRegistrationForm","Form","create","name","Content","Layout","Header","HyperParametersFloat","Footer","Sider","state","inputValue","onChange","value","isNaN","_this2","setState","row","col","slider","min","max","step","input_number","marginLeft","HyperParameters","hyper_parameters_HyperParametersFloat","TreeNode","Tree","DirectoryTree","ModelStructure","onSelect","keys","event","console","log","onExpand","model_structure_Content","multiple","title","key","isLeaf","TrainingStatus","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleStartTrainingOnClick","bind","assertThisInitialized","handleStopTrainingOnClick","handleRestartTrainingOnClick","IsTrained","trainingProgress","trainingProgressID","setInterval","tick","clearInterval","marginBottom","progress","strokeColor","0%","100%","strokeWidth","percent","onClick","LineChart","data","b","h","height","w","width","xFormat","d3","x","domain","d","range","y","line","xTicks","ticks","map","_React$createElement","transform","concat","x1","defineProperty","yTicks","_React$createElement2","_React$createElement3","className","x2","y1","y2","ConfusionMatrix","table","pagination","columns","dataIndex","dataSource","class1","class2","class3","HandleMenuStatus","subMenuIndex","basic_information","hyper_parameters","model_structure","training_status","line_chart","confusion_matrix","handle_menu_status_Content","modelKey","SubMenu","Menu","Title","Typography","App","Paragraph","Text","handleSubMenuItemSelected","handleModelItemSelected","_ref","_ref2","App_Header","typography","color","menu","theme","mode","defaultSelectedKeys","lineHeight","App_Content","App_Sider","defaultOpenKeys","icon","handle_menu_status","App_Footer","textAlign","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4eeb3ebc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport '../index.css';\nimport {\n  Form,\n  Input,\n  Tooltip,\n  Icon,\n  Cascader,\n  Select,\n  Row,\n  Col,\n  Checkbox,\n  Button,\n  AutoComplete,\n  Layout\n} from 'antd';\n\n\nclass RegistrationForm extends React.Component {\n  // state = {\n  //   confirmDirty: false,\n  //   autoCompleteResult: [],\n  // };\n\n  // handleSubmit = e => {\n  //   e.preventDefault();\n  //   this.props.form.validateFieldsAndScroll((err, values) => {\n  //     if (!err) {\n  //       console.log('Received values of form: ', values);\n  //     }\n  //   });\n  // };\n\n  // handleConfirmBlur = e => {\n  //   const { value } = e.target;\n  //   this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  // };\n\n  // compareToFirstPassword = (rule, value, callback) => {\n  //   const { form } = this.props;\n  //   if (value && value !== form.getFieldValue('password')) {\n  //     callback('Two passwords that you enter is inconsistent!');\n  //   } else {\n  //     callback();\n  //   }\n  // };\n\n  // validateToNextPassword = (rule, value, callback) => {\n  //   const { form } = this.props;\n  //   if (value && this.state.confirmDirty) {\n  //     form.validateFields(['confirm'], { force: true });\n  //   }\n  //   callback();\n  // };\n\n  // handleWebsiteChange = value => {\n  //   let autoCompleteResult;\n  //   if (!value) {\n  //     autoCompleteResult = [];\n  //   } else {\n  //     autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\n  //   }\n  //   this.setState({ autoCompleteResult });\n  // };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0,\n        },\n        sm: {\n          span: 16,\n          offset: 8,\n        },\n      },\n    };\n\n    return (\n      <Layout style={{ padding: '0px 0px', background: '#fff' }}>\n        <Form {...formItemLayout}>\n          <Form.Item label=\"Model name\">\n            {getFieldDecorator('modelName', {\n              rules: [\n                {\n                  required: true,\n                  message: 'Please input model name',\n                },\n              ],\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label=\"Owner\">\n            {getFieldDecorator('owner', {\n              rules: [\n                {\n                  required: true,\n                  message: 'Please the owner of this model',\n                }\n              ],\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item {...tailFormItemLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n              </Button>\n          </Form.Item>\n        </Form>\n      </Layout>      \n    );\n  }\n}\n\nconst WrappedRegistrationForm = Form.create({ name: 'register' })(RegistrationForm);\n\nexport default WrappedRegistrationForm;\n","\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport '../index.css';\nimport { Slider, InputNumber, Row, Col, Layout,Button } from 'antd';\nconst { Header, Content, Footer, Sider } = Layout;\nclass HyperParametersInteger extends React.Component {\n    state = {\n        inputValue: 1,\n    };\n\n    onChange = value => {\n        this.setState({\n            inputValue: value,\n        });\n    };\n\n    render() {\n        const { inputValue } = this.state;\n        return (\n            <Row>\n                <Col span={50}>\n                    <Slider\n                        min={1}\n                        max={20}\n                        onChange={this.onChange}\n                        value={typeof inputValue === 'number' ? inputValue : 0}\n                    />\n                </Col>\n                <Col span={4}>\n                    <InputNumber\n                        min={1}\n                        max={20}\n                        style={{ marginLeft: 16 }}\n                        value={inputValue}\n                        onChange={this.onChange}\n                    />\n                </Col>\n            </Row>\n        );\n    }\n}\n\nclass HyperParametersFloat extends React.Component {\n    state = {\n        inputValue: 0,\n    };\n\n    onChange = value => {\n        if (isNaN(value)) {\n            return;\n        }\n        this.setState({\n            inputValue: value,\n        });\n    };\n\n    render() {\n        const { inputValue } = this.state;\n        return (\n            <Row>\n                <Col span={12}>\n                    <Slider\n                        min={0}\n                        max={1}\n                        onChange={this.onChange}\n                        value={typeof inputValue === 'number' ? inputValue : 0}\n                        step={0.01}\n                    />\n                </Col>\n                <Col span={4}>\n                    <InputNumber\n                        min={0}\n                        max={1}\n                        style={{ marginLeft: 16 }}\n                        step={0.01}\n                        value={inputValue}\n                        onChange={this.onChange}\n                    />\n                </Col>\n            </Row>\n        );\n    }\n}\n\nclass HyperParameters extends React.Component {\n\n    render() {\n        return (\n            <Layout style={{ padding: '24px 24px', background: '#fff' }}>\n                <Row>\n                    <Content>\n                       Learning rate\n                    </Content>\n                    <HyperParametersFloat/>\n                </Row>\n                <Row>\n                    <Content>\n                       Dropout rate\n                    </Content>\n                    <HyperParametersFloat/>\n                </Row> \n                <Row>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Submit\n                    </Button>\n                </Row>   \n            </Layout>\n        );\n    }\n}\nexport default HyperParameters;","import React from 'react';\nimport 'antd/dist/antd.css';\nimport '../index.css';\nimport '../App.css';\nimport { Tree, Button, Row, Layout } from 'antd';\nconst { Header, Content, Footer, Sider } = Layout;\n\nconst { TreeNode, DirectoryTree } = Tree;\n\nclass ModelStructure extends React.Component {\n  onSelect = (keys, event) => {\n    console.log('Trigger Select', keys, event);\n  };\n\n  onExpand = () => {\n    console.log('Trigger Expand');\n  };\n\n  render() {\n    return (\n      <Layout style={{ padding: '24px 50px', background: '#fff' }}>\n        <Content>\n          <DirectoryTree multiple onSelect={this.onSelect} onExpand={this.onExpand}>\n            <TreeNode title=\"Input Shape\" key=\"0-0\">\n              <TreeNode title=\"128*128\" key=\"0-0-0\" isLeaf />\n              <TreeNode title=\"256*256\" key=\"0-0-1\" isLeaf />\n              <TreeNode title=\"512*512\" key=\"0-0-2\" isLeaf />\n            </TreeNode>\n            <TreeNode title=\"Application\" key=\"0-1\">\n              <TreeNode title=\"VGG-16\" key=\"0-1-0\" isLeaf />\n              <TreeNode title=\"VGG-19\" key=\"0-1-1\" isLeaf />\n              <TreeNode title=\"Inception V3\" key=\"0-1-2\" isLeaf />\n              <TreeNode title=\"XCeption\" key=\"0-1-3\" isLeaf />\n              <TreeNode title=\"ResNet-50\" key=\"0-1-4\" isLeaf />\n            </TreeNode>\n            <TreeNode title=\"Fully-connected 1\" key=\"0-2\">\n              <TreeNode title=\"1024\" key=\"0-2-0\" isLeaf />\n              <TreeNode title=\"512\" key=\"0-2-1\" isLeaf />\n              <TreeNode title=\"256\" key=\"0-2-2\" isLeaf />\n              <TreeNode title=\"128\" key=\"0-2-3\" isLeaf />\n            </TreeNode>\n            <TreeNode title=\"Fully-connected 2\" key=\"0-3\">\n              <TreeNode title=\"1024\" key=\"0-3-0\" isLeaf />\n              <TreeNode title=\"512\" key=\"0-3-1\" isLeaf />\n              <TreeNode title=\"256\" key=\"0-3-2\" isLeaf />\n              <TreeNode title=\"128\" key=\"0-3-3\" isLeaf />\n            </TreeNode>\n            <TreeNode title=\"Fully-connected 3\" key=\"0-4\">\n              <TreeNode title=\"1024\" key=\"0-4-0\" isLeaf />\n              <TreeNode title=\"512\" key=\"0-4-1\" isLeaf />\n              <TreeNode title=\"256\" key=\"0-4-2\" isLeaf />\n              <TreeNode title=\"128\" key=\"0-4-3\" isLeaf />\n            </TreeNode>\n            <TreeNode title=\"Number of categories\" key=\"0-5\">\n              <TreeNode title=\"2\" key=\"0-5-0\" isLeaf />\n              <TreeNode title=\"3\" key=\"0-5-1\" isLeaf />\n              <TreeNode title=\"4\" key=\"0-5-2\" isLeaf />\n              <TreeNode title=\"5\" key=\"0-5-3\" isLeaf />\n            </TreeNode>\n          </DirectoryTree>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Content>\n      </Layout>\n    );\n  }\n}\nexport default ModelStructure;","import React from 'react';\nimport 'antd/dist/antd.css';\nimport '../index.css';\nimport { Progress, Layout, Row, Button, Col } from 'antd';\n\n\n// const TrainingStatus = () => (\n//   <div>\n//     <Progress\n//       strokeColor={{\n//         '0%': '#108ee9',\n//         '100%': '#87d068',\n//       }}\n//       percent={99.9}\n//     />\n//     <Progress\n//       strokeColor={{\n//         from: '#108ee9',\n//         to: '#87d068',\n//       }}\n//       percent={99.9}\n//       status=\"active\"\n//     />\n//     <Progress\n//       type=\"circle\"\n//       strokeColor={{\n//         '0%': '#108ee9',\n//         '100%': '#87d068',\n//       }}\n//       percent={90}\n//     />\n//     <Progress\n//       type=\"circle\"\n//       strokeColor={{\n//         '0%': '#108ee9',\n//         '100%': '#87d068',\n//       }}\n//       percent={100}\n//     />\n//   </div>\n// );\nclass TrainingStatus extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleStartTrainingOnClick = this.handleStartTrainingOnClick.bind(this);\n    this.handleStopTrainingOnClick = this.handleStopTrainingOnClick.bind(this);\n    this.handleRestartTrainingOnClick = this.handleRestartTrainingOnClick.bind(this);\n    this.state = { IsTrained: 0, trainingProgress:0 };\n  }\n\n  componentDidMount() {\n    this.trainingProgressID = setInterval(\n      () => this.tick(),\n      50\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.trainingProgressID);\n  }\n\n  tick() {\n    if (this.state.IsTrained == 1) {\n      this.setState({\n        trainingProgress: this.state.trainingProgress + 1 \n      });\n    }\n  }\n\n  handleStartTrainingOnClick(){\n    this.setState({IsTrained:1})\n  }\n\n  handleStopTrainingOnClick(){\n    this.setState({IsTrained:0})\n  }\n\n  handleRestartTrainingOnClick(){\n    this.setState({\n      trainingProgress:0  \n    });\n  }\n\n  render() {\n    return (\n      <Layout style={{ padding: '24px 50px', background: '#fff' }}>\n        <Row style={{ marginBottom: 30 }}>\n          <Progress\n            type=\"line\"\n            strokeColor={{\n              '0%': '#108ee9',\n              '100%': '#87d068',\n            }}\n            strokeWidth={100}\n            percent={this.state.trainingProgress}\n          />\n        </Row>\n        <Row>\n          <Col span={4}> \n            <Button type=\"primary\" htmlType=\"submit\" onClick={this.handleStartTrainingOnClick}>\n              Start Training\n            </Button>\n          </Col>\n          <Col span={4}>\n            <Button type=\"primary\" htmlType=\"submit\" onClick={this.handleStopTrainingOnClick}>\n              Stop Training\n            </Button>\n          </Col>\n          <Col span={4}>\n            <Button type=\"primary\" htmlType=\"submit\" onClick={this.handleRestartTrainingOnClick}>\n              Restart Training\n            </Button>\n          </Col>\n        </Row>\n      </Layout>\n    )\n  }\n}\nexport default TrainingStatus;","import React from 'react';\nimport * as d3 from 'd3'\nimport '../index.css'\nimport '../App.css';\n\n\nclass LineChart extends React.Component {\n    render() {\n\n        // const { data, width, height } = this.props\n        const width = 500, height = 350, margin = 20\n        const data = [\n            { a: 1, b: 3 },\n            { a: 2, b: 6 },\n            { a: 3, b: 2 },\n            { a: 4, b: 12 },\n            { a: 5, b: 8 }\n        ]\n\n        const h = height - 2 * margin, w = width - 2 * margin\n\n        //number formatter\n        const xFormat = d3.format('.2')\n\n        //x scale\n        const x = d3.scaleLinear()\n            .domain(d3.extent(data, d => d.a)) //domain: [min,max] of a\n            .range([margin, w])\n\n        //y scale\n        const y = d3.scaleLinear()\n            .domain([0, d3.max(data, d => d.b)]) // domain [0,max] of b (start from 0)\n            .range([h, margin])\n\n        //line generator: each point is [x(d.a), y(d.b)] where d is a row in data\n        // and x, y are scales (e.g. x(10) returns pixel value of 10 scaled by x)\n        const line = d3.line()\n            .x(d => x(d.a))\n            .y(d => y(d.b))\n            // .curve(d3.curveCatmullRom.alpha(0.5)) //curve line\n\n        const xTicks = x.ticks(6).map(d => (\n            x(d) > margin && x(d) < w ?\n                <g transform={`translate(${x(d)},${h + margin})`}>\n                    <text>{xFormat(d)}</text>\n                    <line x1='0' x1='0' y1='0' y2='5' transform=\"translate(0,-20)\" />\n                </g>\n                : null\n        ))\n\n        const yTicks = y.ticks(5).map(d => (\n            y(d) > 10 && y(d) < h ?\n                <g transform={`translate(${margin},${y(d)})`}>\n                    <text x=\"-12\" y=\"5\">{xFormat(d)}</text>\n                    <line x1='0' x1='5' y1='0' y2='0' transform=\"translate(-5,0)\" />\n                    <line className='gridline' x1='0' x1={w - margin} y1='0' y2='0' transform=\"translate(-5,0)\" />\n                </g>\n                : null\n        ))\n\n        return (\n            <svg width={width} height={height}>\n                <line className=\"axis\" x1={margin} x2={w} y1={h} y2={h} />\n                <line className=\"axis\" x1={margin} x2={margin} y1={margin} y2={h} />\n                <path d={line(data)} />\n                <g className=\"axis-labels\">\n                    {xTicks}\n                </g>\n                <g className=\"axis-labels\">\n                    {yTicks}\n                </g>\n            </svg>\n        )\n    }\n}\n\n// const width = 500, height = 350, margin = 20\n// const data = [\n//     { a: 1, b: 3 },\n//     { a: 2, b: 6 },\n//     { a: 3, b: 2 },\n//     { a: 4, b: 12 },\n//     { a: 5, b: 8 }\n// ]\n\nexport default LineChart;","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport '../index.css';\nimport { Table } from 'antd';\n\nfunction ConfusionMatrix() {\n\n    const columns = [\n        {\n            title: '',\n            dataIndex: 'name',\n        },\n        {\n            title: 'Class 1 predicted',\n            dataIndex: 'class1',\n        },\n        {\n            title: 'Class 2 predicted',\n            dataIndex: 'class2',\n        },\n        {\n            title: 'Class 3 predicted',\n            dataIndex: 'class3',\n        },\n    ];\n\n    const data = [\n        {\n            key: '1',\n            name: 'Class 1 Actual',\n            class1: 300,\n            class2: 100,\n            class3: 100,\n        },\n        {\n            key: '2',\n            name: 'Class 2 Actual',\n            class1: 100,\n            class2: 300,\n            class3: 100,\n        },\n        {\n            key: '3',\n            name: 'Class 3 Actual',\n            class1: 100,\n            class2: 100,\n            class3: 300,\n        },\n    ];\n    return (\n        <Table\n            pagination={false}\n            columns={columns}\n            dataSource={data}\n            title={() => 'Confusion Matrix'}\n        />\n    )\n}\nexport default ConfusionMatrix;\n","import React from 'react';\nimport { Layout, Menu, Breadcrumb, Icon, Typography } from 'antd';\nimport WrappedRegistrationForm from './data/basic_information'\nimport HyperParameters from './data/hyper_parameters'\nimport ModelStructure from './data/model_structure'\nimport TrainingStatus from './data/training_status'\nimport LineChart from './Visualizations/line_chart'\nimport ConfusionMatrix from './Visualizations/confusion_matrix'\n\n\nconst { Content} = Layout;\n\nfunction HandleMenuStatus(props) {\n    if (props.subMenuIndex === 'basicInformation') {\n        return <WrappedRegistrationForm/>\n    }else if (props.subMenuIndex === 'hyperParameters') {\n        return <HyperParameters/>\n    }else if (props.subMenuIndex === 'modelStructure') {\n        return <ModelStructure/>\n    }else if (props.subMenuIndex === 'trainingStatus') {\n        return <TrainingStatus/>\n    }else if (props.subMenuIndex === 'loss') {\n        return <LineChart/>\n    }else if (props.subMenuIndex === 'confusionMatrix') {\n        return <ConfusionMatrix/>\n    }else if (props.subMenuIndex === 'rocCurve') {\n        return <LineChart/>\n    }\n    return <Content>Hello, {props.modelKey}, {props.subMenuIndex}</Content>;\n}\n  \n\nexport default HandleMenuStatus;\n  ","import React from 'react';\nimport logo from './logo.svg';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport './App.css';\n\nimport HandleMenuStatus from './handle_menu_status'\nimport { Layout, Menu, Breadcrumb, Icon, Typography,Row } from 'antd';\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Footer, Sider } = Layout;\nconst { Title, Paragraph, Text } = Typography;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubMenuItemSelected = this.handleSubMenuItemSelected.bind(this);\n    this.handleModelItemSelected = this.handleModelItemSelected.bind(this);\n    this.state = { modelKey: \"model1\", subMenuIndex: 'basicInformation' };\n  }\n  \n  handleModelItemSelected({key}) {\n    this.setState({modelKey: key})\n  }\n\n  handleSubMenuItemSelected({key}) {\n    this.setState({ subMenuIndex: key });\n  }\n\n  render() {\n    return (\n      <Layout>\n        <Header className=\"header-1\">\n          <Typography>\n            <Title><font color=\"white\">MACHINE LEARNING DASHBOARD</font></Title>\n          </Typography>\n\n        </Header>\n        <Header className=\"header\">\n          <Menu\n            theme=\"dark\"\n            mode=\"horizontal\"\n            defaultSelectedKeys={['model1']}\n            style={{ lineHeight: '64px' }}\n            onClick={this.handleModelItemSelected}\n          >\n            <Menu.Item key=\"model1\"  >model 1</Menu.Item>\n            <Menu.Item key=\"model2\"  >model 2</Menu.Item>\n            <Menu.Item key=\"model3\"  >model 3</Menu.Item>\n          </Menu>\n        </Header>\n        <Content style={{ padding: '0 50px' }}>\n          {/* <Breadcrumb style={{ margin: '16px 0' }}>\n            <Breadcrumb.Item>Machine learning dashboard</Breadcrumb.Item>\n        </Breadcrumb> */}\n          <Layout style={{ padding: '24px 0', background: '#fff' }}>\n            <Sider width={200} style={{ background: '#fff' }}>\n              <Menu\n                mode=\"inline\"\n                defaultSelectedKeys={['1']}\n                defaultOpenKeys={['modelInformation']}\n                style={{ height: '100%' }}\n              >\n                <SubMenu\n                  key=\"modelInformation\"\n                  title={\n                    <span>\n                      <Icon type=\"folder\" theme=\"twoTone\" />\n                      Model Information\n                    </span>\n                  }\n                  onClick={this.handleSubMenuItemSelected}\n                >\n                  <Menu.Item key=\"basicInformation\" >Basic Information</Menu.Item>\n                  <Menu.Item key=\"modelStructure\" >Model Structure</Menu.Item>\n                  <Menu.Item key=\"hyperParameters\" >Hyper Parameters</Menu.Item>\n                  <Menu.Item key=\"trainingStatus\" >Training Status</Menu.Item>\n                </SubMenu>\n                <SubMenu\n                  key=\"visualization\"\n                  title={\n                    <span>\n                      <Icon type=\"fund\" theme=\"twoTone\" />\n                      Visualization\n                    </span>\n                  }\n                  onClick={this.handleSubMenuItemSelected}\n                >\n                  <Menu.Item key=\"loss\"  >Loss</Menu.Item>\n                  <Menu.Item key=\"confusionMatrix\"  >Confusion Matrix</Menu.Item>\n                  <Menu.Item key=\"rocCurve\"  >Roc Curve</Menu.Item>\n                </SubMenu>\n              </Menu>\n            </Sider>\n            {/* <Content style={{ padding: '0 24px', minHeight: 280 }}>showState {this.state.modelKey} {this.state.subMenuIndex}</Content> */}\n            {/* <WrappedRegistrationForm style={{ textAlign: 'center' }}/> */}\n            \n            <HandleMenuStatus modelKey={this.state.modelKey} subMenuIndex={this.state.subMenuIndex} />\n\n          </Layout>\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>Machine Learning Dashboard</Footer>\n      </Layout>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}